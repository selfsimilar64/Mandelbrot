<resources xmlns:tools="http://schemas.android.com/tools">
    <string name="title_activity_settings">Settings</string>
    <string name="app_name">Fractal Eye</string>
    <string name="fe_abbrev">FE</string>


    <!-- LAYOUT -->
    <!-- ===================================================================================== -->


    <!-- MAIN -->
    <string name="category" translatable="false">category</string>
    <string name="settings">settings</string>
    <string name="texture">texture</string>
    <string name="shape">Shape</string>
    <string name="color">color</string>
    <string name="position">position</string>
    <string name="reaction" translatable="false">reaction</string>
    <string name="display_param1" translatable="false">param1</string>
    <string name="display_param2" translatable="false">param2</string>
    <string name="display_param3" translatable="false">param3</string>
    <string name="display_param4" translatable="false">param4</string>
    <string name="e" translatable="false">e</string>
    <string name="welcome_message" translatable="false">Welcome to Fractal Eye!</string>
    <string name="tutorial_position1" translatable="false" tools:ignore="ExtraTranslation">To move around and explore the fractal, click the POSITION button.</string>
    <string name="tutorial_position2" translatable="false">Swipe in any direction to move</string>
    <string name="tutorial_position3" translatable="false">Pinch to zoom in or out!</string>
    <string name="tutorial_color1" translatable="false">To change how the fractal is colored, click the COLOR button.</string>
    <string name="tutorial_color2" translatable="false">Swipe left or right to shift the colors</string>
    <string name="tutorial_color3" translatable="false">Pinch to make the colors change more or less frequently!</string>
    <string name="empty" translatable="false"> </string>
    <string name="reset">Reset</string>
    <string name="new_str">new</string>
    <string name="view">view</string>
    <string name="done">done</string>
    <string name="random">random</string>
    <string name="cancel">cancel</string>
    <string name="delete">Delete</string>
    <string name="list">List</string>
    <string name="empty_list_favorite">Swipe left on an item and press the star icon to add it to your favorites!</string>
    <string name="empty_list_custom">Press the «NEW» button at the bottom of the screen to create a custom item!</string>
    <string name="gold_enabled">Upgrade Successful!</string>
    <string name="gold_enabled_dscript">All features should now be available! For questions or concerns please contact selfsimilartech@gmail.com. Thank you for your purchase and happy fractal-making!</string>
    <string name="gold_pending">Purchase Pending…</string>
    <string name="gold_pending_dscript">Your purchase is still being processed. Please check back later.</string>
    <string name="epilepsy_title">Caution</string>
    <string name="epilepsy_dscript">This app can sometimes produce fast flashing images which may be harmful to users with photosensitive epilepsy.</string>



    <!-- UPGRADE ACTIVITY -->
    <string name="upgrade">Upgrade</string>
    <string name="no_thanks">No thanks</string>
    <string name="upgrade_resolution_header">Preserve Details</string>
    <string name="upgrade_customization_header">Unlock Everything</string>
    <string name="upgrade_creativity_header">Unleash Your Creativity</string>
    <string name="upgrade_resolution_dscript">Save images with the highest quality resolution!</string>
    <string name="free">Free</string>
    <string name="upgrade_customization_content1">%d new shapes!</string>
    <string name="upgrade_customization_content2">%d new textures!</string>
    <string name="upgrade_customization_content3">%d new parameters!</string>
    <string name="upgrade_customization_dscript1">Get access to Julia mode with every shape!</string>
    <string name="upgrade_customization_dscript2">Explore countless combinations and styles with fine-tuned control over every aspect!</string>
    <string name="upgrade_creativity_dscript1">Save as many custom palettes and shapes as you can create!</string>
    <string name="upgrade_creativity_dscript2">Create color palettes with up to 12 colors!</string>
    <string name="upgrade_creativity_dscript3">Use the custom shape calculator to discover unique shapes that have never been seen before!</string>
    <string name="upgrade_error">An error occurred. Please make sure you are connected to the internet.</string>


    <!-- SETTINGS FRAGMENT -->
    <string name="reload">reload</string>
    <string name="resolution">Resolution</string>
    <string name="resolution_dims" translatable="false">width x height</string>
    <string name="precision">Precision</string>
    <string name="hardware" translatable="false">hardware</string>
    <string name="render">render</string>
    <string name="display">display</string>
    <string name="precision_bits" translatable="false">32-bit</string>
    <string name="resolution_low">Low</string>
    <string name="resolution_high">High</string>
    <string name="precision_single">single</string>
    <string name="precision_dual">dual</string>
    <string name="hardware_gpu" translatable="false">gpu</string>
    <string name="hardware_cpu" translatable="false">cpu</string>
    <string name="precision_auto">auto</string>
    <string name="save">save</string>
    <string name="continuous_render">Continuous Render</string>
    <string name="display_params">Display Parameters</string>
    <string name="render_background">Render Background</string>
    <string name="hide_nav_bar">Hide Navigation Bar</string>
    <string name="fit_viewport">Fit Image To Display Window</string>
    <string name="chunk_count">Chunks</string>
    <string name="show_hints" translatable="false">Show Hints</string>
    <string name="continuous_render_hint">Render the image during position changes</string>
    <string name="render_background_hint">Render a larger low-resolution image underneath the main image</string>
    <string name="display_params_hint">Show window with relevant parameters during touch gestures</string>
    <string name="fit_viewport_hint">Show the entire rendered image</string>
    <string name="chunk_count_hint">Controls how many sections the image is divided into when rendering (increase if the app crashes for large values of SHAPE -> ITERATE)</string>
    <string name="changelog">Changes</string>
    <string name="edit">Edit</string>
    <string name="header_favorites">Favorites</string>
    <string name="header_custom">Custom</string>
    <string name="header_default">Default</string>
    <string name="header_custom_descript">(swipe left to edit)</string>
    <string name="highres_render">High Resolution Render</string>
    <string name="dont_show_again">Don\'t show this message again</string>


    <!-- TEXTURE FRAGMENT -->
    <string name="texture_name" translatable="false">Texture Name</string>
    <string name="texture_param_name" translatable="false">Texture Parameter Name</string>
    <string name="escape_radius">Escape Radius</string>
    <string name="radius">radius</string>
    <string name="mode">mode</string>
    <string name="texture_mode">Texture Mode</string>
    <string name="texture_mode_out">out</string>
    <string name="texture_mode_in">in</string>
    <string name="texture_mode_both">both</string>
    <string name="bailout_hint" translatable="false">Determines how large the numbers can get during calcualtion before terminating</string>
    <string name="bins">Bins</string>


    <!-- SHAPE FRAGMENT -->
    <string name="shape_name" translatable="false">Shape Name</string>
    <string name="dscript_shape_preview">shape preview image</string>
    <string name="u">u</string>
    <string name="v">v</string>
    <string name="julia" translatable="false">Julia</string>
    <string name="param1">Param 1</string>
    <string name="param2">Param 2</string>
    <string name="param3">Param 3</string>
    <string name="param4">Param 4</string>
    <string name="sensitivity">rate</string>
    <string name="max_iter">iterate</string>
    <string name="julia_mode">Julia Mode</string>
    <string name="max_iter_hint" translatable="false">Determines the maximum number of calculations per pixel.
        Increasing will make shape more defined but increase render time.</string>
    <string name="julia_mode_hint" translatable="false">Use a parameter to create each type of shape that can be found within the main shape</string>
    <string name="slower">Slower</string>
    <string name="faster">Faster</string>
    <string name="more_detail">More detail</string>
    <string name="less_detail">Less detail</string>
    <string name="slow_dualfloat_title">Slow Renders</string>
    <string name="slow_dualfloat_dscript1">Rendering this shape at deeper zooms uses calculations that are significantly slower and may even cause crashes on some devices</string>
    <string name="slow_dualfloat_dscript2">Switch to dual-float mode?</string>
    <string name="slow_dualfloat_choice">Remember my choice</string>
    <string name="rendering_icons">Rendering Custom Icons …</string>


    <!-- COLOR FRAGMENT -->
    <string name="palette">Palette</string>
    <string name="palette_name" translatable="false">Palette Name</string>
    <string name="frequency">frequency</string>
    <string name="phase">phase</string>
    <string name="solid_fill">fill</string>
    <string name="solid_fill_white">white</string>
    <string name="solid_fill_black">black</string>
    <string name="autofit">auto</string>
    <string name="add">add</string>
    <string name="remove">remove</string>
    <string name="phase_hint" translatable="false">Determines the color offset. Swipe left or right with one finger to change.</string>
    <string name="freq_hint" translatable="false">Determines how frequently the colors change. Use pinch gestures to change.</string>


    <!-- POSITION FRAGMENT -->
    <string name="x" translatable="false">x</string>
    <string name="y" translatable="false">y</string>
    <string name="xy" translatable="false">xy</string>
    <string name="zoom" translatable="false">zoom</string>
    <string name="rotation">rotation</string>
    <string name="rotate">rotate</string>


    <!-- SHAPE NAMES -->
    <string name="mandelbrot" translatable="false">Mandelbrot</string>
    <string name="mandelbrot_cubic">Mandelbrot Cubic</string>
    <string name="mandelbrot_quartic">Mandelbrot Quartic</string>
    <string name="mandelbrot_quintic">Mandelbrot Quintic</string>
    <string name="mandelbrot_sextic">Mandelbrot Sextic</string>
    <string name="mandelbrot_anypow">Mandelbrot (Power)</string>
    <string name="clover">Clover</string>
    <string name="burning_ship">Burning Ship</string>
    <string name="burning_ship_anypow">Burning Ship (Power)</string>
    <string name="mandelbox">Mandelbox</string>
    <string name="kali" translatable="false">Kali</string>
    <string name="sine">Sine 1</string>
    <string name="cosine">Cosine</string>
    <string name="hyperbolic_sine">Hyperbolic Sine</string>
    <string name="hyperbolic_cosine">Hyperbolic Cosine</string>
    <string name="bessel" translatable="false">Bessel</string>
    <string name="sine2">Sine 2</string>
    <string name="horseshoe_crab">Horseshoe Crab</string>
    <string name="kleinian" translatable="false">Kleinian</string>
    <string name="nova1" translatable="false">Nova 1</string>
    <string name="nova2" translatable="false">Nova 2</string>
    <string name="collatz" translatable="false">Collatz</string>
    <string name="mandelex" translatable="false">Mandelex</string>
    <string name="binet" translatable="false">Binet</string>
    <string name="sierpinski_triangle">Sierpiński Triangle</string>
    <string name="sierpinski_square">Sierpinski Square</string>
    <string name="sierpinski_pentagon">Sierpinski Pentagon</string>
    <string name="tsquare">T-Square</string>
    <string name="heighway_dragon">Heighway Dragon</string>
    <string name="cactus">Cactus</string>
    <string name="cephalopod">Cephalopod</string>
    <string name="kali_square">Kali Square</string>
    <string name="mandelbar" translatable="false">Mandelbar</string>
    <string name="lambert_newton" translatable="false">Lambert Newton</string>
    <string name="magnet1">Magnet 1</string>
    <string name="magnet2">Magnet 2</string>
    <string name="necklace">Necklace</string>
    <string name="taurus">Taurus</string>
    <string name="ammonite">Ammonite</string>


    <!-- PALETTE NAMES -->
    <string name="yinyang">Yin Yang</string>
    <string name="night">Night</string>
    <string name="cosmic">Cosmic</string>
    <string name="peacock">Peacock</string>
    <string name="elephant">Elephant</string>
    <string name="oldskool">Old Sk00l</string>
    <string name="bronze">Bronze</string>
    <string name="gold">Gold</string>
    <string name="p9">P9</string>
    <string name="viridis">Viridis</string>
    <string name="plasma">Plasma</string>
    <string name="magma">Magma</string>
    <string name="vascular">Vascular</string>
    <string name="flora">Flora</string>
    <string name="royal">Royal</string>
    <string name="groovy">Groovy</string>
    <string name="canyon">Canyon</string>
    <string name="anubis">Anubis</string>
    <string name="backwards">Backwards</string>
    <string name="slow">Slow</string>
    <string name="alpha">Alpha</string>
    <string name="peach">Peach</string>
    <string name="jazz" translatable="false">Jazz</string>
    <string name="chroma">Chroma</string>
    <string name="island">Island</string>
    <string name="bioluminescent">Bioluminescent</string>
    <string name="kingfisher">Kingfisher</string>
    <string name="polygon">Polygon</string>
    <string name="rose">Rose</string>
    <string name="fossil">Fossil</string>
    <string name="atlas">Atlas</string>
    <string name="time">Time</string>
    <string name="starling">Starling</string>
    <string name="overgrown">Overgrown</string>
    <string name="pagoda">Pagoda</string>
    <string name="melted">Melted</string>
    <string name="torus">Torus</string>
    <string name="ruby">Ruby</string>
    <string name="sapphire">Sapphire</string>
    <string name="amethyst">Amethyst</string>
    <string name="diamond">Diamond</string>
    <string name="aztec">Aztec</string>
    <string name="neon">Neon</string>
    <string name="dragon">Dragon</string>
    <string name="coral">Coral</string>
    <string name="aquamarine">Aquamarine</string>
    <string name="parachute">Parachute</string>
    <string name="polyphonic">Polyphonic</string>
    <string name="anaglyph">Anaglyph</string>
    <string name="catalyst">Catalyst</string>


    <!-- TEXTURE NAMES -->
    <string name="escape">Escape Time</string>
    <string name="converge">Converge Time</string>
    <string name="escape_smooth">Escape Time (Smooth)</string>
    <string name="exponential_smooth">Exponential Smoothing</string>
    <string name="distance_est">Distance Estimation</string>
    <string name="distance_est_abs">Absolute Distance</string>
    <string name="triangle_ineq_avg">Triangle Inequality Average</string>
    <string name="triangle_ineq_avg_int" translatable="false">Triangle Inequality Average (Int)</string>
    <string name="triangle_ineq_avg_float" translatable="false">Triangle Inequality Average (Float)</string>
    <string name="curvature_avg">Curvature Average</string>
    <string name="stripe_avg">Stripe Average</string>
    <string name="orbit_trap_circ">Circular Orbit Trap</string>
    <string name="orbit_trap_line">Linear Orbit Trap</string>
    <string name="orbit_trap_box">Square Orbit Trap</string>
    <string name="normal1">Normal Map 1</string>
    <string name="normal2">Normal Map 2</string>
    <string name="overlay_avg">Overlay Average</string>
    <string name="stripe_avg_bins" translatable="false">Stripe Average (Bins)</string>
    <string name="stripe_median_bins" translatable="false">Stripe Median (Bins)</string>
    <string name="stripe_mode_bins" translatable="false">Stripe Mode (Bins)</string>
    <string name="angular_momentum">Angular Momentum</string>
    <string name="umbrella">Umbrella</string>
    <string name="inverse_umbrella">Inverse Umbrella</string>



    <!-- PARAM NAMES -->
    <string name="density">Density</string>
    <string name="width">Width</string>
    <string name="sharpness">Sharpness</string>
    <string name="bend">Bend</string>
    <string name="size">Size</string>
    <string name="power">Power</string>
    <string name="angle">Angle</string>
    <string name="scale">Scale</string>
    <string name="linear">Linear</string>
    <string name="center">Center</string>
    <string name="shift">Shift</string>


    <!-- MESSAGES -->
    <string name="msg_invalid_format">Invalid number format</string>
    <string name="msg_zoom_limit">Zoom limit reached</string>
    <string name="msg_dual_in1">Switching to dual-precision…</string>
    <string name="msg_dual_in2">Image generation will be slower</string>
    <string name="msg_dual_out1">Switching to single-precision…</string>
    <string name="msg_dual_out2">Image generation will be faster</string>
    <string name="msg_save_successful">Image saved to </string>
    <string name="msg_save_failed">Image not saved: storage permission required</string>
    <string name="msg_save_wait">Please wait for the image to finish rendering</string>
    <string name="msg_save_enabled">Image saving enabled - click again to save</string>
    <string name="msg_num_out_range">Number out of range</string>
    <string name="msg_cpu">Switching to CPU…</string>
    <string name="msg_textures_disabled">Textures disabled</string>
    <string name="msg_gpu">Switching to GPU…</string>
    <string name="msg_textures_enabled">Textures enabled</string>
    <string name="msg_error">An error occurred! Sorry about that :(</string>
    <string name="msg_img_save_error1">Error saving image…</string>
    <string name="msg_img_save_error2">Make sure storage permissions are enabled</string>
    <string name="msg_perturb">Switching to perturbation mode…</string>
    <string name="msg_classic">Switching to classic mode…</string>
    <string name="msg_out_of_memory">Error - Not enough memory</string>
    <string name="msg_custom_name_duplicate">A %s with this name already exists - please choose a different name</string>
    <string name="msg_eqn_error">Please edit the equation until the error indicator is not showing</string>


    <!-- UTILITY -->
    <!-- ===================================================================================== -->

    <string name="color_index" translatable="false">
        float j = (s.x - textureMin)/(textureMax - textureMin);
        float i = frequency*j + phase;
        float n = mod(float(numColors - 1)*i, float(numColors - 1));
        int p = int(floor(n));
        float q = mod(n, 1.0);
        color = (1.0 - q)*palette[p] + q*palette[p + 1];
    </string>
    <string name="color_lighting" translatable="false">
        vec3 normRay = vec3(cos(s.x), sin(s.x), 1.0);
        normRay /= length(normRay);
        float lightHeight = 1.0;
        vec3 lightRay = vec3(1.0, 1.0, lightHeight);
        lightRay /= length(lightRay);
        vec3 viewRay = vec3(0.0, 0.0, 1.0);
        vec3 reflectRay = 2.0*dot(normRay, lightRay)*normRay - lightRay;

        float diffuse_intensity = 0.2;
        float phi = dot(normRay, lightRay) / lightHeight;
        float diffuse = clamp(phi, 0.0, 1.0);
        diffuse = diffuse_intensity*(diffuse - 1.0) + 1.0;

        float specular_intensity = 0.5;
        float specular_phong = 3.0;
        float alpha = dot(reflectRay, viewRay);
        float specular = clamp(alpha, 0.0, 1.0);
        specular = specular_intensity*1.5*pow(specular, specular_phong);
        diffuse *= 1.0 - specular;

        color = diffuse*color + specular;
    </string>

    <string name="arithmetic_atan" translatable="false">
        float atan2(float y, float x) {
            if (x > 0.0 || y != 0.0) {
                return 2.0*atan(y/(sqrt(x*x + y*y) + x));
            }
            else if (x &lt; 0.0 &amp;&amp; y == 0.0) {
                return pi;
            }
            else {
                return 0.0;
            }
        }
    </string>
    <string name="arithmetic_atan_powervr" translatable="false">
        float atanAroundInf(float x) {
            float t = x;
            float xSqr = t*t;
            float theta = 0.5*pi - 1.0/t;

            t *= xSqr;
            theta += 1.0/(3.0*t);
            t *= xSqr;
            theta -= 1.0/(5.0*t);

            return theta;
        }
        float atanPowerVR(float x) {
            float theta;
            if (x >= -1.0 &amp;&amp; x &lt;= 1.0) {
                theta = atan(x);
            }
            else if (x > 1.0) {
                theta = atanAroundInf(x + 0.1);
            }
            else if (x &lt; -1.0) {
                theta = -atanAroundInf(-x + 0.1);
            }
            return theta;
        }
        float atan2(float y, float x) {
            if (x > 0.0 || y != 0.0) {
                return 2.0*atanPowerVR(y/(sqrt(x*x + y*y) + x));
            }
            else if (x &lt; 0.0 &amp;&amp; y == 0.0) {
                return pi;
            }
            else {
                return 0.0;
            }
        }
    </string>


    <!-- SHAPES -->
    <!-- ===================================================================================== -->

    <string name="mandelbrot_katex" translatable="false">
        $z_{n+1} = z_{n}^2 + %s$
    </string>
    <string name="mandelbrotcubic_katex" translatable="false">
        $z_{n+1} = z_{n}^3 + %s$
    </string>
    <string name="mandelbrotquartic_katex" translatable="false">
        $z_{n+1} = z_{n}^4 + %s$
    </string>
    <string name="mandelbrotquintic_katex" translatable="false">
        $z_{n+1} = z_{n}^5 + %s$
    </string>
    <string name="mandelbrotanypow_katex" translatable="false">
        $z_{n+1} = z_{n}^{P_1} + %s$
    </string>
    <string name="dualpow_katex" translatable="false">
        $z_{n+1} = %s \\cdot (z_{n}^{P_1} + z_{n}^{-P_1})$
    </string>
    <string name="mandelbox_katex" translatable="false">
        $z_{n+1} = \\footnotesize P_1\\cdot\\textrm{ballFold}\\big(\\textrm{boxFold}(z_n)\\big) - %s$
    </string>
    <string name="kali_katex" translatable="false">
        $z_{n+1} = \\large\\frac{\\textrm{abs}(z_n)}{|\\textrm{abs}(z_n)|^2} +\\small J$
    </string>
    <string name="mandelbar_loop_sf" translatable="false">
        Z = cSqrSF(conjSF(Z1)) + C;
    </string>
    <string name="logistic_loop_sf" translatable="false">
        Z = cDivSF(Z1 - cSqrSF(Z1), C);
    </string>
    <string name="logistic_loop_df" translatable="false">
        vec4 W1 = cSqrDF(X1, Y1);
        vec2 W2 = addDF(X1, -W1.xy);
        vec2 W3 = addDF(Y1, -W1.zw);
        vec4 W4 = cDivDF(W2, W3, A, B);
        X = W4.xy;
        Y = W4.zw;
    </string>
    <string name="logistic_katex" translatable="false">
        $z_{n+1} = \\Large \\frac{z_n - z_n^2}{%s}$
    </string>
    <string name="burningship_katex" translatable="false">
        $z_{n+1} = \\textrm{abs}(z_n)^2 + %s$
    </string>
    <string name="magnet_loop_sf" translatable="false">
        Z = cSqrSF(cDivSF(cSqrSF(Z1) + C + P1, 2.0*Z1 + C + P2));
    </string>
    <string name="sine1_katex" translatable="false">
        $z_{n+1} = \\sin(z_n) + %s$
    </string>
    <string name="sine2_katex" translatable="false">
        $z_{n+1} = \\sin\\Big(\\Large\\frac{z_n^2 + P_1}{%s}\\normalsize\\Big)$
    </string>
    <string name="sine3_loop_sf" translatable="false">
        Z = sinSF(cDivSF(cPow3(Z1, P1.x), C));
    </string>
    <string name="sine3_katex" translatable="false">
        $z_{n+1} = \\sin(\\frac{z_n^{\\operatorname{Re}(P_1)}}{%s})$
    </string>
    <string name="horseshoecrab_katex" translatable="false">
        $z_{n+1} = \\sin\\Big(\\Large\\frac{P_1}{z_n} + \\frac{z_n}{%s}\\normalsize\\Big)$
    </string>
    <string name="persianrug_init_sf" translatable="false">
        Z = C;
    </string>
    <string name="persianrug_loop_sf" translatable="false">
        Z = cMultSF(Z1, sinSF(tanSF(P1 - cDivSF(C, Z1))) + Z1 + tanSF(Z1));
    </string>
    <string name="persianrug_katex" translatable="false">
        $z_{n+1} = z \\cdot \\big(\\sin\\big(\\tan(P1 - \\large\\frac{%s}{z_n}\\normalsize)\\big) + z_n + \\tan(z_n)\\big)$
    </string>
    <string name="newton1_loop_sf" translatable="false">
        Z = Z - cDivSF(cSqrSF(cSqrSF(Z)) - vec2(1.0, 0.0), 4.0*cMultSF(Z, cSqrSF(Z)));
    </string>
    <string name="newton2_loop_sf" translatable="false">
        vec2 W = cMultSF(Z - P1, Z - P2);
        vec2 numerator = cMultSF(W, Z - P3);
        vec2 denominator = W + cMultSF(Z - P3, 2.0*Z - P1 - P2);
        Z = Z - cDivSF(numerator, denominator);
    </string>
    <string name="newton3_loop_sf" translatable="false">
        Z = Z1 - cDivSF(coshSF(Z1) - vec2(1.0, 0.0), sinhSF(Z1));
    </string>
    <string name="newton3_katex" translatable="false">
        $z_{n+1} = z_n - \\large\\frac{\\cosh(z_n) - 1}{\\sinh(z_n)} \\normalsize$
    </string>
    <string name="nova1_katex" translatable="false">
        $z_{n+1} = z_n -\\small P_1\\cdot\\Large\\frac{z_n^3 - 1}{3z_n^2} \\normalsize + %s$
    </string>
    <string name="nova2_katex" translatable="false">
        $z_{n+1} = z_n - \\Large\\frac{\\sin(z_n^2) - z_n}{2z_n\\cos(z_n^2)} \\normalsize + %s$
    </string>
    <string name="fibonacci_init_sf" translatable="false">
        int k1 = 0;
        int k = 1;
        int ktemp;
    </string>
    <string name="fibonacci_loop_sf" translatable="false">
        Z = Z1 + cPow3(ONE + cInverseSF(Z1), float(k)) + C;
        ktemp = k;
        k = k + k1;
        k1 = ktemp;
    </string>
    <string name="burningshipanypow_loop_sf" translatable="false">
        Z = cPow4(abs(Z1), P1) + C;
    </string>
    <string name="collatz_katex" translatable="false">
        $z_{n+1} = \\frac{1}{4}(2 + 7z_n - (2 + 5z)\\cos(\\pi z_n))$
    </string>
    <string name="new1_loop_sf" translatable="false">
        Z = cExpSF(sinSF(Z1)) + C;
    </string>
    <string name="new2_loop_sf" translatable="false">
        Z = sinSF4(Z1) + C;
    </string>


    <!-- LIGHTING -->
    <string name="mandelbrot_light_init_sf" translatable="false">
        vec2 a = vec2(0.0);
        vec2 b = vec2(0.0);
    </string>
    <string name="mandelbrot_light_loop_sf" translatable="false">
        b = 2.0*(cMultSF(b, Z1) + cSqrSF(a));
        a = 2.0*cMultSF(a, Z1) + vec2(1.0, 0.0);
    </string>
    <string name="mandelbrot_light_final_sf" translatable="false">
        vec2 u = cDivSF(Z, a);
        float theta = atan(u.y, u.x);
        colorParams.x = theta;
    </string>
    <string name="mandelbrot_light_final2_sf" translatable="false">
        vec2 u = cMultSF(cMultSF(Z, a), (log(modZ) + 1.0)*cConjSF(cSqrSF(a)) - log(modZ)*cConjSF(cMultSF(Z, b)));
        float theta = atan(u.y, u.x);
        colorParams.x = theta;
    </string>
    <string name="mandelbrot_light_init_df" translatable="false">
        vec4 a = vec4(0.0);
    </string>
    <string name="mandelbrot_light_loop_df" translatable="false">
        a = cMultDF(a.xy, a.zw, X1, Y1);
        a.xy = multDF(vec2(2.0, 0.0), a.xy);
        a.zw = multDF(vec2(2.0, 0.0), a.zw);
        a.xy = addDF(a.xy, vec2(1.0, 0.0));
    </string>
    <string name="mandelbrot_light_final_df" translatable="false">
        vec4 u = cDivDF(X1, Y1, a.xy, a.zw);
        float theta = atan(u.z, u.x);
        colorParams.x = theta;
    </string>
    <string name="mandelbrot_light_color_sf" translatable="false">
        float theta = colorParams.x;
        vec3 normRay = vec3(cos(theta), sin(theta), 1.0);
        normRay = normalize(normRay);
        vec3 reflectRay = 2.0*dot(normRay, lightRay)*normRay - lightRay;
        // vec3 reflectRay = reflect(lightRay, normRay);
        float diffuse = dot(normRay, lightRay);
        if (diffuse &lt; 0.0) { diffuse = 0.0; }
        diffuse = 1.75*(diffuse + 0.2);
        float specular = pow(dot(reflectRay, viewRay), 1.5);
        if (specular &lt; 0.0) { specular = 0.0; }
        specular = 0.75*(specular + 0.01);
        color = diffuse*color + specular;
    </string>

</resources>
